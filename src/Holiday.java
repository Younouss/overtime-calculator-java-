
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author h
 */
public class Holiday extends javax.swing.JFrame {

    /**
     * Creates new form Holiday
     */
    public Holiday() {
        initComponents();
        IDList = new ArrayList<Integer>();
        Show_Holiday_In_JTable();
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_HolidayMouseClicked(evt) ;
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    insert(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(Holiday.class.getName()).log(Level.SEVERE, null, ex);
                }
                Show_Holiday_In_JTable();
                
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    update(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(Holiday.class.getName()).log(Level.SEVERE, null, ex);
                }
                Show_Holiday_In_JTable();
            }
        });
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    delete(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(Holiday.class.getName()).log(Level.SEVERE, null, ex);
                }
                Show_Holiday_In_JTable();               
            }
        });
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear();
                Show_Holiday_In_JTable();               
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear();
            }
        });
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Férié");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Date");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Férié", "Date", "Date de création", "Créateur", "Date de modification", "Modificateur"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Effacer");

        jMenu1.setText("Férié");

        jMenuItem1.setText("Ajouter");
        jMenu1.add(jMenuItem1);
        jMenuItem1.getAccessibleContext().setAccessibleParent(jMenu1);

        jMenuItem2.setText("Modifier");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Supprimer");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Actualiser");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(datePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(105, 105, 105)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Holiday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Holiday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Holiday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Holiday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Holiday().setVisible(true);
            }
        });
    }
    public void Clear(){
        jTextField1.setText("");
        datePicker1.setText("");
    }
public ArrayList<HolidayClass> getHolidayList()
   {
       ArrayList<HolidayClass> holidayList = new ArrayList<HolidayClass>();
       Connect con = new Connect();
       Connection connection = con.getConnection();
       
       String query = "SELECT ID,name,holiday_date,date_created,user_date_created,date_modified,user_date_modified FROM holidays  WHERE status = 1";
       Statement st;
       ResultSet rs;
       
       try {
           
           st = connection.createStatement();   
           rs = st.executeQuery(query);
           HolidayClass holidayClass;
           IDList.clear();
           while(rs.next())
           {
               IDList.add(rs.getInt("ID"));
               holidayClass = new HolidayClass(rs.getString("name"),rs.getString("holiday_date"),rs.getString("date_created"),rs.getString("user_date_created"),rs.getString("date_modified"),rs.getString("user_date_modified"));
               holidayList.add(holidayClass);
           }
       } catch (Exception e) {
                  
           e.printStackTrace();
       }
       return holidayList;
   }

    public void Show_Holiday_In_JTable()
   {
       ArrayList<HolidayClass> list = getHolidayList();
       DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
       model.setRowCount(0);
       Object[] row = new Object[6];
       for(int i = 0; i < list.size(); i++)
       {   
           row[0] = list.get(i).getHoliday(); 
           row[1] = list.get(i).getDate();
           row[2] = list.get(i).getDate_created(); 
           row[3] = list.get(i).getUser_date_created();
           row[4] = list.get(i).getDate_modified();
           row[5] = list.get(i).getUser_date_modified();
           model.addRow(row);
       }
    }
public void insert(java.awt.event.ActionEvent evt) throws SQLException{
        Connect con = new Connect();
        Connection connection = con.getConnection();
        Statement st;
        st = connection.createStatement();
        ResultSet rs;
        String verify_holiday_date = "SELECT * from holidays WHERE holiday_date = '"+datePicker1.getDate()+"'";
        rs = st.executeQuery(verify_holiday_date);
                if(rs.next() == false){
                    String query = "INSERT INTO holidays(name,holiday_date,status,date_created,user_date_created,date_modified,user_date_modified) VALUES('"+jTextField1.getText()+"', '"+datePicker1.getDate()+"',1,NOW(),'"+username+"',NOW(),'"+username+"')";     
                    st.executeUpdate(query);
                    JOptionPane.showMessageDialog(null, "Férié enregistré"); 
                    Clear();
                }
                else
                   JOptionPane.showMessageDialog(null, "Date de férié déja enregistrée");
    }
public void update(java.awt.event.ActionEvent evt) throws SQLException{
        Connect con = new Connect();
        Connection connection = con.getConnection();
        Statement st;
        ResultSet rs;
        st = connection.createStatement();
        String verify_holiday_date = "SELECT * from holidays WHERE holiday_date = '"+datePicker1.getDate()+"'";
        rs = st.executeQuery(verify_holiday_date);
                if(rs.next() == false){
                    String query = "UPDATE holidays SET name = '"+jTextField1.getText()+"',holiday_date = '"+datePicker1.getDate()+"',date_modified = NOW(),user_date_modified = '"+username+"' WHERE ID = "+ID;
                    st.executeUpdate(query);
                    JOptionPane.showMessageDialog(null, "Férié modifié");
                    Clear();
                }
                else
                   JOptionPane.showMessageDialog(null, "Date de férié déja enregistrée"); 
                
    }
public void delete(java.awt.event.ActionEvent evt) throws SQLException{
        Connect con = new Connect();
        Connection connection = con.getConnection();
        String query = "UPDATE holidays SET status = 0 WHERE ID = "+ID;
        Statement st;
        st = connection.createStatement();   
        st.executeUpdate(query);
        JOptionPane.showMessageDialog(null, "Férié supprimé");
        Clear();
    }
private void jTable_Display_HolidayMouseClicked(java.awt.event.MouseEvent evt) {
    int i = jTable1.getSelectedRow();
    ID = IDList.get(i);
    TableModel model = jTable1.getModel();
    jTextField1.setText(model.getValueAt(i,0).toString());
    LocalDate date = LocalDate.parse(model.getValueAt(i,1).toString(),DateTimeFormatter.ofPattern("yyyy-LL-dd"));
    datePicker1.setDate(date);
    //datePicker1.setText(model.getValueAt(i,1).toString());
}
 public void setUsername(String username){
        this.username =username;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    private ArrayList<Integer> IDList;
    private int ID;
    private String username;
}
